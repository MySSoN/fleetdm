---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fleetdm-ingress
  namespace: test
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-http2: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-body-size: "64m"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"

#    nginx.ingress.kubernetes.io/enable-cors: "true"
#    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
#    nginx.ingress.kubernetes.io/cors-allow-methods: "*"
#    nginx.ingress.kubernetes.io/cors-allow-headers: "*"
#    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"

    nginx.ingress.kubernetes.io/proxy-buffer-size: "32k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-busy-buffers-size: "128k"

    nginx.ingress.kubernetes.io/use-forwarded-headers: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: "0.0.0.0/0"
    nginx.ingress.kubernetes.io/server-snippet: |
      if ($request_method = TRACE) {
        return 405;
      }

spec:
  ingressClassName: nginx
  rules:
  - host: fleetdb.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fleetdm-ingress-svc
            port:
              number: 8443
  tls:
    - secretName: fleetdm-ingress-svc-tls
      hosts:
        - fleetdb.example.com
