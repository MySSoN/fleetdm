---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fleetdm
  namespace: test
  labels:
    app: fleetdm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fleetdm
  template:
    metadata:
      labels:
        app: fleetdm
    spec:
      containers:
      - name: fleetdm
        image: fleetdm/fleet:v4.67.3
        command: ["fleet"]
        args:
        - serve
        - --server_tls=false
        ports:
        - containerPort: 8080
        env:
        - name: FLEET_MYSQL_USERNAME
          valueFrom:
            secretKeyRef:
              name: fleetdb-secrets
              key: FLEET_MYSQL_USERNAME
        - name: FLEET_MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fleetdb-secrets
              key: FLEET_MYSQL_PASSWORD
        - name: FLEET_MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: fleetdb-secrets
              key: FLEET_MYSQL_DATABASE
        - name: FLEET_MYSQL_ADDRESS
          value: "mysql-svc:3306"
        - name: FLEET_REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fleetdb-secrets
              key: FLEET_REDIS_PASSWORD
        - name: FLEET_REDIS_ADDRESS
          value: "redis-svc:6379"
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 5
---
apiVersion: v1
kind: Service
metadata:
  name: fleetdm-svc
  namespace: test
spec:
  selector:
    app: fleetdm
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      name: http
    - protocol: TCP
      port: 8443
      targetPort: 8443
      name: https
  type: ClusterIP
